{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from \"./uploads.mjs\";\nconst MAX_RETRIES = 2;\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    return new Stream(response, props.controller);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json')) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return json;\n  }\n  // TODO handle blob, arraybuffer, other content types, etc.\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n  constructor(responsePromise, parseResponse = defaultParseResponse) {\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => transform(await this.parseResponse(props)));\n  }\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexport class APIClient {\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 600000,\n    // 10 minutes\n    httpAgent,\n    fetch: overridenFetch\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries !== null && maxRetries !== void 0 ? maxRetries : MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch !== null && overridenFetch !== void 0 ? overridenFetch : fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  defaultHeaders(opts) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts)\n    };\n  }\n  /**\n   * Override this to add your own headers validation:\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(opts => ({\n      method,\n      path,\n      ...opts\n    })));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, {\n      method: 'get',\n      path,\n      ...opts\n    });\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    }\n    return null;\n  }\n  buildRequest(options) {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.timeout;\n    const httpAgent = (_c = (_b = options.httpAgent) !== null && _b !== void 0 ? _b : this.httpAgent) !== null && _c !== void 0 ? _c : getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (typeof ((_d = httpAgent === null || httpAgent === void 0 ? void 0 : httpAgent.options) === null || _d === void 0 ? void 0 : _d.timeout) === 'number' && minAgentTimeout > ((_e = httpAgent.options.timeout) !== null && _e !== void 0 ? _e : 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const reqHeaders = {\n      ...(contentLength && {\n        'Content-Length': contentLength\n      }),\n      ...this.defaultHeaders(options),\n      ...headers\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['Content-Type'];\n    }\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach(key => reqHeaders[key] === null && delete reqHeaders[key]);\n    const req = {\n      method,\n      ...(body && {\n        body: body\n      }),\n      headers: reqHeaders,\n      ...(httpAgent && {\n        agent: httpAgent\n      }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: (_f = options.signal) !== null && _f !== void 0 ? _f : null\n    };\n    this.validateHeaders(reqHeaders, headers);\n    return {\n      req,\n      url,\n      timeout\n    };\n  }\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, {\n    url,\n    options\n  }) {}\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : {\n      ...headers\n    };\n  }\n  makeStatusError(status, error, message, headers) {\n    return APIError.generate(status, error, message, headers);\n  }\n  request(options, remainingRetries = null) {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    var _a, _b, _c;\n    const options = await optionsInput;\n    if (retriesRemaining == null) {\n      retriesRemaining = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n    }\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options);\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if ((_b = options.signal) === null || _b === void 0 ? void 0 : _b.aborted) {\n      throw new APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    if (response instanceof Error) {\n      if ((_c = options.signal) === null || _c === void 0 ? void 0 : _c.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = createResponseHeaders(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(e => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      debug('response', response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = {\n        ...defaultQuery,\n        ...query\n      };\n    }\n    if (query) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(([_, value]) => typeof value !== 'undefined').map(([key, value]) => {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n      }\n      if (value === null) {\n        return `${encodeURIComponent(key)}=`;\n      }\n      throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const {\n      signal,\n      ...options\n    } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    return this.getRequestClient()\n    // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n    .fetch.call(undefined, url, {\n      signal: controller.signal,\n      ...options\n    }).finally(() => {\n      clearTimeout(timeout);\n    });\n  }\n  getRequestClient() {\n    return {\n      fetch: this.fetch\n    };\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    var _a;\n    retriesRemaining -= 1;\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    let timeoutMillis;\n    const retryAfterHeader = responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after'];\n    if (retryAfterHeader) {\n      const timeoutSeconds = parseInt(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!timeoutMillis || !Number.isInteger(timeoutMillis) || timeoutMillis <= 0 || timeoutMillis > 60 * 1000) {\n      const maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n    return (sleepSeconds + jitter) * 1000;\n  }\n  getUserAgent() {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\nexport class APIResource {\n  constructor(client) {\n    this.client = client;\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n}\nexport class AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = {\n      ...this.options\n    };\n    if ('params' in nextInfo) {\n      nextOptions.query = {\n        ...nextOptions.query,\n        ...nextInfo.params\n      };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n  }\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n  async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\nexport const createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true\n};\nexport const isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: `${major}.${minor}.${patch}`\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  return _platformHeaders !== null && _platformHeaders !== void 0 ? _platformHeaders : _platformHeaders = getPlatformProperties();\n};\nexport const safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\nexport const castToError = err => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\nexport const ensurePresent = value => {\n  if (value == null) throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = env => {\n  var _a, _b, _c, _d;\n  if (typeof process !== 'undefined') {\n    return (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a[env]) !== null && _b !== void 0 ? _b : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return (_d = (_c = Deno.env) === null || _c === void 0 ? void 0 : _c.get) === null || _d === void 0 ? void 0 : _d.call(_c, env);\n  }\n  return undefined;\n};\nexport const coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport const maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport const maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action, ...args) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport const isHeadersProtocol = headers => {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexport const getHeader = (headers, key) => {\n  const lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};","map":{"version":3,"names":["VERSION","Stream","OpenAIError","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","kind","shimsKind","getDefaultAgent","fetch","isMultipartBody","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","MAX_RETRIES","defaultParseResponse","props","response","options","stream","controller","contentType","headers","get","includes","json","debug","status","url","text","APIPromise","Promise","constructor","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","p","withResponse","data","all","parse","parsedPromise","onfulfilled","onrejected","catch","finally","onfinally","APIClient","baseURL","maxRetries","timeout","httpAgent","overridenFetch","validatePositiveInteger","authHeaders","opts","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","path","methodRequest","post","patch","put","delete","method","request","getAPIList","Page","requestAPIList","calculateContentLength","body","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","length","buildRequest","query","JSON","stringify","contentLength","buildURL","_a","_c","_b","minAgentTimeout","_d","_e","idempotencyHeader","idempotencyKey","reqHeaders","Object","keys","forEach","key","req","agent","signal","_f","prepareRequest","parseHeaders","Symbol","iterator","fromEntries","Array","from","map","header","makeStatusError","error","message","generate","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","cause","responseHeaders","createResponseHeaders","ok","shouldRetry","errText","e","errJSON","safeJSON","errMessage","undefined","err","PagePromise","isAbsoluteURL","URL","endsWith","startsWith","slice","defaultQuery","isEmptyObj","search","stringifyQuery","entries","filter","_","value","encodeURIComponent","join","init","ms","addEventListener","abort","setTimeout","getRequestClient","call","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterHeader","timeoutSeconds","parseInt","Number","isNaN","Date","now","isInteger","calculateDefaultRetryTimeoutMillis","sleep","initialRetryDelay","maxRetryDelay","numRetries","sleepSeconds","Math","min","pow","jitter","random","APIResource","client","bind","AbstractPage","_AbstractPage_client","set","__classPrivateFieldSet","hasNextPage","items","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","page","WeakMap","asyncIterator","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","obj","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","_platformHeaders","startsWithSchemeRegexp","RegExp","test","n","ensurePresent","readEnv","env","coerceInteger","round","coerceFloat","parseFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","action","args","console","log","replace","c","r","v","isRunningInBrowser","window","document","isHeadersProtocol","getHeader","lowerKey","isArray","warn","toBase64","str","btoa"],"sources":["C:\\Users\\12818\\Documents\\MVPworkshop\\workoutPlanner\\sweat-smart\\node_modules\\openai\\src\\core.ts"],"sourcesContent":["import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/index';\nexport { type Response };\nimport { isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nconst MAX_RETRIES = 2;\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  if (props.options.stream) {\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    return new Stream(response, props.controller) as any;\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (contentType?.includes('application/json')) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  return text as any as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overridenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overridenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req extends {}, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    }\n\n    return null;\n  }\n\n  buildRequest<Req extends {}>(\n    options: FinalRequestOptions<Req>,\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders: Record<string, string> = {\n      ...(contentLength && { 'Content-Length': contentLength }),\n      ...this.defaultHeaders(options),\n      ...headers,\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['Content-Type'];\n    }\n\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return { req, url, timeout };\n  }\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req extends {}, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest(\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    if (retriesRemaining == null) {\n      retriesRemaining = options.maxRetries ?? this.maxRetries;\n    }\n\n    const { req, url, timeout } = this.buildRequest(options);\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      debug('response', response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req extends Record<string, unknown>>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (query) {\n      url.search = this.stringifyQuery(query);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new OpenAIError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    return (\n      this.getRequestClient()\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        .fetch.call(undefined, url, { signal: controller.signal as any, ...options })\n        .finally(() => {\n          clearTimeout(timeout);\n        })\n    );\n  }\n\n  protected getRequestClient(): RequestClient {\n    return { fetch: this.fetch };\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    retriesRemaining -= 1;\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    let timeoutMillis: number | undefined;\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader) {\n      const timeoutSeconds = parseInt(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (\n      !timeoutMillis ||\n      !Number.isInteger(timeoutMillis) ||\n      timeoutMillis <= 0 ||\n      timeoutMillis > 60 * 1000\n    ) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n\n    return (sleepSeconds + jitter) * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport class APIResource {\n  protected client: APIClient;\n  constructor(client: APIClient) {\n    this.client = client;\n\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n\n  protected get: APIClient['get'];\n  protected post: APIClient['post'];\n  protected patch: APIClient['patch'];\n  protected put: APIClient['put'];\n  protected delete: APIClient['delete'];\n  protected getAPIList: APIClient['getAPIList'];\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new OpenAIError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo) {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: AbstractPage<Item> = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<Req extends {} = Record<string, unknown> | Readable> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions<Record<string, unknown> | Readable> => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req extends {} = Record<string, unknown> | Readable> = RequestOptions<Req> & {\n  method: HTTPMethod;\n  path: string;\n};\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version,\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env] ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env);\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getHeader = (headers: HeadersLike, key: string): string | null | undefined => {\n  const lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}