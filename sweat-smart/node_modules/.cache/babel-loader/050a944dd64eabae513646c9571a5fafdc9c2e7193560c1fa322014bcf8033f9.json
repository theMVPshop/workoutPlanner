{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12818\\\\Documents\\\\MVPworkshop\\\\workoutPlanner\\\\sweat-smart\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Form from \"./components/FormPage/Form\";\nimport \"./App.css\";\nimport PracticeCard from \"./components/ResultsPage/PracticeCard\";\nimport { prompt } from \"./Prompt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [days, setDays] = useState([]);\n  const [workoutTypes, setWorkoutTypes] = useState([]);\n  const [muscleGroups, setMuscleGroups] = useState([]);\n  const [timeRange, setTimeRange] = useState(\"\");\n  const [fitnessLevel, setFitnessLevel] = useState(\"\");\n  const [plan, setPlan] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  //preLoad\n  // useEffect(() => {\n  //   setLoading(true);\n  //   setTimeout(() => {\n  //     setLoading(false);\n  //   }, 6000);\n  // }, []);\n\n  const handleSubmit = (name, gender, fitnessLevel, workoutTypes, muscleGroups, days, timeRange) => {\n    setLoading(true);\n    prompt(name, gender, fitnessLevel, workoutTypes, muscleGroups, days, timeRange).then(generatedPlan => {\n      setPlan(generatedPlan);\n      setLoading(false);\n    });\n  };\n  const handleDays = e => {\n    const day = e.target.value;\n    if (e.target.checked) {\n      setDays(prevDays => [...prevDays, day]);\n    } else {\n      setDays(prevDays => prevDays.filter(d => d !== day));\n    }\n  };\n  const handleWorkoutTypes = e => {\n    const type = e.target.value;\n    if (e.target.checked) {\n      setWorkoutTypes(prevTypes => [...prevTypes, type]);\n    } else {\n      setWorkoutTypes(prevTypes => prevTypes.filter(t => t !== type));\n    }\n  };\n  const handleMuscleGroups = e => {\n    const group = e.target.value;\n    if (e.target.checked) {\n      setMuscleGroups(prevGroups => [...prevGroups, group]);\n    } else {\n      setMuscleGroups(prevGroups => prevGroups.filter(g => g !== group));\n    }\n  };\n\n  // use useEffect to apply AOS animation\n  useEffect(() => {\n    AOS.init({\n      duration: 1000,\n      offset: 100\n    });\n    AOS.refresh();\n  }, []);\n  useEffect(() => {\n    console.log(plan);\n  }, [plan]);\n  const pageRef = useRef(null);\n  const handleScroll = () => {\n    pageRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {\n      handleScroll: handleScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      pageRef: pageRef,\n      name: name,\n      gender: gender,\n      days: days,\n      workoutTypes: workoutTypes,\n      muscleGroups: muscleGroups,\n      timeRange: timeRange,\n      fitnessLevel: fitnessLevel,\n      handleDays: handleDays,\n      handleWorkoutTypes: handleWorkoutTypes,\n      handleMuscleGroups: handleMuscleGroups,\n      setName: setName,\n      setGender: setGender,\n      setTimeRange: setTimeRange,\n      setFitnessLevel: setFitnessLevel,\n      handleSubmit: handleSubmit,\n      handleScroll: handleScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PracticeCard, {\n      plan: plan,\n      loading: loading,\n      pageRef: pageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l8F9/67y35XAZAVT98cCdbQZdtg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","AOS","HomePage","Form","PracticeCard","prompt","jsxDEV","_jsxDEV","App","_s","name","setName","gender","setGender","days","setDays","workoutTypes","setWorkoutTypes","muscleGroups","setMuscleGroups","timeRange","setTimeRange","fitnessLevel","setFitnessLevel","plan","setPlan","loading","setLoading","handleSubmit","then","generatedPlan","handleDays","e","day","target","value","checked","prevDays","filter","d","handleWorkoutTypes","type","prevTypes","t","handleMuscleGroups","group","prevGroups","g","init","duration","offset","refresh","console","log","pageRef","handleScroll","current","scrollIntoView","behavior","block","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/12818/Documents/MVPworkshop/workoutPlanner/sweat-smart/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport Form from \"./components/FormPage/Form\";\r\nimport \"./App.css\";\r\nimport PracticeCard from \"./components/ResultsPage/PracticeCard\";\r\nimport { prompt } from \"./Prompt\";\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [days, setDays] = useState([]);\r\n  const [workoutTypes, setWorkoutTypes] = useState([]);\r\n  const [muscleGroups, setMuscleGroups] = useState([]);\r\n  const [timeRange, setTimeRange] = useState(\"\");\r\n  const [fitnessLevel, setFitnessLevel] = useState(\"\");\r\n  const [plan, setPlan] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //preLoad\r\n  // useEffect(() => {\r\n  //   setLoading(true);\r\n  //   setTimeout(() => {\r\n  //     setLoading(false);\r\n  //   }, 6000);\r\n  // }, []);\r\n\r\n  const handleSubmit = (\r\n    name,\r\n    gender,\r\n    fitnessLevel,\r\n    workoutTypes,\r\n    muscleGroups,\r\n    days,\r\n    timeRange\r\n  ) => {\r\n    setLoading(true);\r\n    prompt(\r\n      name,\r\n      gender,\r\n      fitnessLevel,\r\n      workoutTypes,\r\n      muscleGroups,\r\n      days,\r\n      timeRange,\r\n    ).then((generatedPlan) => {\r\n      setPlan(generatedPlan);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleDays = (e) => {\r\n    const day = e.target.value;\r\n    if (e.target.checked) {\r\n      setDays((prevDays) => [...prevDays, day]);\r\n    } else {\r\n      setDays((prevDays) => prevDays.filter((d) => d !== day));\r\n    }\r\n  };\r\n\r\n  const handleWorkoutTypes = (e) => {\r\n    const type = e.target.value;\r\n    if (e.target.checked) {\r\n      setWorkoutTypes((prevTypes) => [...prevTypes, type]);\r\n    } else {\r\n      setWorkoutTypes((prevTypes) => prevTypes.filter((t) => t !== type));\r\n    }\r\n  };\r\n\r\n  const handleMuscleGroups = (e) => {\r\n    const group = e.target.value;\r\n    if (e.target.checked) {\r\n      setMuscleGroups((prevGroups) => [...prevGroups, group]);\r\n    } else {\r\n      setMuscleGroups((prevGroups) => prevGroups.filter((g) => g !== group));\r\n    }\r\n  };\r\n\r\n  // use useEffect to apply AOS animation\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      offset: 100,\r\n    });\r\n    AOS.refresh();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(plan);\r\n  }, [plan]);\r\n\r\n  const pageRef = useRef(null);\r\n\r\n  const handleScroll = () => {\r\n    pageRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomePage handleScroll={handleScroll} />\r\n\r\n      <Form\r\n        pageRef={pageRef}\r\n        name={name}\r\n        gender={gender}\r\n        days={days}\r\n        workoutTypes={workoutTypes}\r\n        muscleGroups={muscleGroups}\r\n        timeRange={timeRange}\r\n        fitnessLevel={fitnessLevel}\r\n        handleDays={handleDays}\r\n        handleWorkoutTypes={handleWorkoutTypes}\r\n        handleMuscleGroups={handleMuscleGroups}\r\n        setName={setName}\r\n        setGender={setGender}\r\n        setTimeRange={setTimeRange}\r\n        setFitnessLevel={setFitnessLevel}\r\n        handleSubmit={handleSubmit}\r\n        handleScroll={handleScroll}\r\n      />\r\n\r\n      <PracticeCard plan={plan} loading={loading} pageRef={pageRef}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAO,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM6B,YAAY,GAAGA,CACnBlB,IAAI,EACJE,MAAM,EACNU,YAAY,EACZN,YAAY,EACZE,YAAY,EACZJ,IAAI,EACJM,SAAS,KACN;IACHO,UAAU,CAAC,IAAI,CAAC;IAChBtB,MAAM,CACJK,IAAI,EACJE,MAAM,EACNU,YAAY,EACZN,YAAY,EACZE,YAAY,EACZJ,IAAI,EACJM,SACF,CAAC,CAACS,IAAI,CAAEC,aAAa,IAAK;MACxBL,OAAO,CAACK,aAAa,CAAC;MACtBH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC1B,IAAIH,CAAC,CAACE,MAAM,CAACE,OAAO,EAAE;MACpBrB,OAAO,CAAEsB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEJ,GAAG,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLlB,OAAO,CAAEsB,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKN,GAAG,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,MAAMO,kBAAkB,GAAIR,CAAC,IAAK;IAChC,MAAMS,IAAI,GAAGT,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3B,IAAIH,CAAC,CAACE,MAAM,CAACE,OAAO,EAAE;MACpBnB,eAAe,CAAEyB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;IACtD,CAAC,MAAM;MACLxB,eAAe,CAAEyB,SAAS,IAAKA,SAAS,CAACJ,MAAM,CAAEK,CAAC,IAAKA,CAAC,KAAKF,IAAI,CAAC,CAAC;IACrE;EACF,CAAC;EAED,MAAMG,kBAAkB,GAAIZ,CAAC,IAAK;IAChC,MAAMa,KAAK,GAAGb,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5B,IAAIH,CAAC,CAACE,MAAM,CAACE,OAAO,EAAE;MACpBjB,eAAe,CAAE2B,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,KAAK,CAAC,CAAC;IACzD,CAAC,MAAM;MACL1B,eAAe,CAAE2B,UAAU,IAAKA,UAAU,CAACR,MAAM,CAAES,CAAC,IAAKA,CAAC,KAAKF,KAAK,CAAC,CAAC;IACxE;EACF,CAAC;;EAED;EACA/C,SAAS,CAAC,MAAM;IACdG,GAAG,CAAC+C,IAAI,CAAC;MACPC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IACFjD,GAAG,CAACkD,OAAO,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENrD,SAAS,CAAC,MAAM;IACdsD,OAAO,CAACC,GAAG,CAAC7B,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAM8B,OAAO,GAAGtD,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMuD,YAAY,GAAGA,CAAA,KAAM;IACzBD,OAAO,CAACE,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;EACxE,CAAC;EAED,oBACEpD,OAAA;IAAAqD,QAAA,gBACErD,OAAA,CAACL,QAAQ;MAACqD,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExCzD,OAAA,CAACJ,IAAI;MACHmD,OAAO,EAAEA,OAAQ;MACjB5C,IAAI,EAAEA,IAAK;MACXE,MAAM,EAAEA,MAAO;MACfE,IAAI,EAAEA,IAAK;MACXE,YAAY,EAAEA,YAAa;MAC3BE,YAAY,EAAEA,YAAa;MAC3BE,SAAS,EAAEA,SAAU;MACrBE,YAAY,EAAEA,YAAa;MAC3BS,UAAU,EAAEA,UAAW;MACvBS,kBAAkB,EAAEA,kBAAmB;MACvCI,kBAAkB,EAAEA,kBAAmB;MACvCjC,OAAO,EAAEA,OAAQ;MACjBE,SAAS,EAAEA,SAAU;MACrBQ,YAAY,EAAEA,YAAa;MAC3BE,eAAe,EAAEA,eAAgB;MACjCK,YAAY,EAAEA,YAAa;MAC3B2B,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFzD,OAAA,CAACH,YAAY;MAACoB,IAAI,EAAEA,IAAK;MAACE,OAAO,EAAEA,OAAQ;MAAC4B,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACvD,EAAA,CApHQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAsHZ,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}