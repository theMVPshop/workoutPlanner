{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12818\\\\Documents\\\\MVPworkshop\\\\workoutPlanner\\\\sweat-smart\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Form from \"./components/FormPage/Form\";\nimport \"./App.css\";\nimport PracticeCard from \"./components/ResultsPage/PracticeCard\";\nimport { prompt } from \"./Prompt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [days, setDays] = useState([]);\n  const [workoutTypes, setWorkoutTypes] = useState([]);\n  const [muscleGroups, setMuscleGroups] = useState([]);\n  const [timeRange, setTimeRange] = useState(\"\");\n  const [fitnessLevel, setFitnessLevel] = useState(\"\");\n  const [plan, setPlan] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [clicked, setClicked] = useState(false);\n  const handleSubmit = async (name, gender, fitnessLevel, workoutTypes, muscleGroups, days, timeRange) => {\n    setLoading(true);\n    setClicked(true);\n    let jsonObject;\n    // Runs the function until a proper response is given\n    do {\n      let generatedPlan = await prompt(name, gender, fitnessLevel, workoutTypes, muscleGroups, days, timeRange);\n      let string = generatedPlan.replace(/\\\\\"/g, '\"').replace(/\\\\n/g, '\\n');\n      jsonObject = JSON.parse(string);\n      console.log(jsonObject);\n    } while (!Array.isArray(jsonObject.exercises));\n    setPlan(jsonObject);\n    setLoading(false);\n    setClicked(false);\n  };\n  const handleDays = e => {\n    const day = e.target.value;\n    if (e.target.checked) {\n      setDays(prevDays => [...prevDays, day]);\n    } else {\n      setDays(prevDays => prevDays.filter(d => d !== day));\n    }\n  };\n  const handleWorkoutTypes = e => {\n    const type = e.target.value;\n    if (e.target.checked) {\n      setWorkoutTypes(prevTypes => [...prevTypes, type]);\n    } else {\n      setWorkoutTypes(prevTypes => prevTypes.filter(t => t !== type));\n    }\n  };\n  const handleMuscleGroups = e => {\n    const group = e.target.value;\n    if (e.target.checked) {\n      setMuscleGroups(prevGroups => [...prevGroups, group]);\n    } else {\n      setMuscleGroups(prevGroups => prevGroups.filter(g => g !== group));\n    }\n  };\n\n  // use useEffect to apply AOS animation\n  useEffect(() => {\n    AOS.init({\n      duration: 1000,\n      offset: 100\n    });\n    AOS.refresh();\n  }, []);\n  useEffect(() => {\n    console.log(plan);\n  }, [plan]);\n  const pageRef = useRef(null);\n  const handleScroll = () => {\n    pageRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  //preload\n  const preloadRef = useRef();\n  const handleScrollPreload = () => {\n    preloadRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {\n      handleScroll: handleScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      pageRef: pageRef,\n      name: name,\n      gender: gender,\n      days: days,\n      workoutTypes: workoutTypes,\n      muscleGroups: muscleGroups,\n      timeRange: timeRange,\n      fitnessLevel: fitnessLevel,\n      handleDays: handleDays,\n      handleWorkoutTypes: handleWorkoutTypes,\n      handleMuscleGroups: handleMuscleGroups,\n      setName: setName,\n      setGender: setGender,\n      setTimeRange: setTimeRange,\n      setFitnessLevel: setFitnessLevel,\n      handleSubmit: handleSubmit,\n      handleScrollPreload: handleScrollPreload,\n      setClicked: setClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PracticeCard, {\n      clicked: clicked,\n      plan: plan,\n      loading: loading,\n      preloadRef: preloadRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5kIbkPb1TnXYOFSs4o86dr0TMMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","AOS","HomePage","Form","PracticeCard","prompt","jsxDEV","_jsxDEV","App","_s","name","setName","gender","setGender","days","setDays","workoutTypes","setWorkoutTypes","muscleGroups","setMuscleGroups","timeRange","setTimeRange","fitnessLevel","setFitnessLevel","plan","setPlan","loading","setLoading","clicked","setClicked","handleSubmit","jsonObject","generatedPlan","string","replace","JSON","parse","console","log","Array","isArray","exercises","handleDays","e","day","target","value","checked","prevDays","filter","d","handleWorkoutTypes","type","prevTypes","t","handleMuscleGroups","group","prevGroups","g","init","duration","offset","refresh","pageRef","handleScroll","current","scrollIntoView","behavior","block","preloadRef","handleScrollPreload","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/12818/Documents/MVPworkshop/workoutPlanner/sweat-smart/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport Form from \"./components/FormPage/Form\";\r\nimport \"./App.css\";\r\nimport PracticeCard from \"./components/ResultsPage/PracticeCard\";\r\nimport { prompt } from \"./Prompt\";\r\n\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [days, setDays] = useState([]);\r\n  const [workoutTypes, setWorkoutTypes] = useState([]);\r\n  const [muscleGroups, setMuscleGroups] = useState([]);\r\n  const [timeRange, setTimeRange] = useState(\"\");\r\n  const [fitnessLevel, setFitnessLevel] = useState(\"\");\r\n  const [plan, setPlan] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleSubmit = async (\r\n    name,\r\n    gender,\r\n    fitnessLevel,\r\n    workoutTypes,\r\n    muscleGroups,\r\n    days,\r\n    timeRange\r\n  ) => {\r\n    setLoading(true);\r\n    setClicked(true);\r\n\r\n\r\n    let jsonObject;\r\n    // Runs the function until a proper response is given\r\n    do {\r\n      let generatedPlan = await prompt(\r\n        name, \r\n        gender,\r\n        fitnessLevel,\r\n        workoutTypes,\r\n        muscleGroups,\r\n        days,\r\n        timeRange\r\n      );\r\n\r\n      let string = generatedPlan.replace(/\\\\\"/g, '\"').replace(/\\\\n/g, '\\n');\r\n      jsonObject = JSON.parse(string);\r\n      console.log(jsonObject);\r\n      \r\n    } while (!Array.isArray(jsonObject.exercises));\r\n    setPlan(jsonObject);\r\n    setLoading(false); \r\n    setClicked(false);\r\n  };\r\n\r\n  const handleDays = (e) => {\r\n    const day = e.target.value;\r\n    if (e.target.checked) {\r\n      setDays((prevDays) => [...prevDays, day]);\r\n    } else {\r\n      setDays((prevDays) => prevDays.filter((d) => d !== day));\r\n    }\r\n  };\r\n\r\n  const handleWorkoutTypes = (e) => {\r\n    const type = e.target.value;\r\n    if (e.target.checked) {\r\n      setWorkoutTypes((prevTypes) => [...prevTypes, type]);\r\n    } else {\r\n      setWorkoutTypes((prevTypes) => prevTypes.filter((t) => t !== type));\r\n    }\r\n  };\r\n\r\n  const handleMuscleGroups = (e) => {\r\n    const group = e.target.value;\r\n    if (e.target.checked) {\r\n      setMuscleGroups((prevGroups) => [...prevGroups, group]);\r\n    } else {\r\n      setMuscleGroups((prevGroups) => prevGroups.filter((g) => g !== group));\r\n    }\r\n  };\r\n\r\n  // use useEffect to apply AOS animation\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      offset: 100,\r\n    });\r\n    AOS.refresh();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(plan);\r\n  }, [plan]);\r\n\r\n  const pageRef = useRef(null);\r\n\r\n  const handleScroll = () => {\r\n    pageRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n  //preload\r\n  const preloadRef = useRef();\r\n\r\n  const handleScrollPreload = () => {\r\n    preloadRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomePage handleScroll={handleScroll} />\r\n\r\n      <Form\r\n        pageRef={pageRef}\r\n        name={name}\r\n        gender={gender}\r\n        days={days}\r\n        workoutTypes={workoutTypes}\r\n        muscleGroups={muscleGroups}\r\n        timeRange={timeRange}\r\n        fitnessLevel={fitnessLevel}\r\n        handleDays={handleDays}\r\n        handleWorkoutTypes={handleWorkoutTypes}\r\n        handleMuscleGroups={handleMuscleGroups}\r\n        setName={setName}\r\n        setGender={setGender}\r\n        setTimeRange={setTimeRange}\r\n        setFitnessLevel={setFitnessLevel}\r\n        handleSubmit={handleSubmit}\r\n        handleScrollPreload={handleScrollPreload}\r\n        setClicked={setClicked}\r\n      />\r\n\r\n      <PracticeCard\r\n        clicked={clicked}\r\n        plan={plan}\r\n        loading={loading}\r\n        preloadRef={preloadRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}